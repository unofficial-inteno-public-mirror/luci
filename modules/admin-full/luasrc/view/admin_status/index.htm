<%#
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: index.htm 7022 2011-05-04 21:04:31Z jow $

-%>

<%
	require "luci.fs"
	require "luci.tools.status"
	require "luci.quest"

	local advanced = (luci.http.formvalue("advanced") == "1")

	local has_ipv6 = luci.fs.access("/proc/net/ipv6_route")
	local has_dhcp = luci.fs.access("/etc/config/dhcp")
	local has_wifi = luci.fs.stat("/etc/config/wireless")
	      has_wifi = has_wifi and has_wifi.size > 0

	local prt = require "luci.model.ports".init()

	local router = luci.quest.router_static_sysinfo()

	if luci.http.formvalue("status") == "1" then
		local ntm = require "luci.model.network".init()
		local wan = ntm:get_wannet()
		local wan6 = ntm:get_wan6net()

		local _, _, memtotal, memcached, membuffers, memfree = luci.sys.sysinfo()

		local conn_count = tonumber((
			luci.sys.exec("wc -l /proc/net/nf_conntrack") or
			luci.sys.exec("wc -l /proc/net/ip_conntrack") or
			""):match("%d+")) or 0

		local conn_max = tonumber((
			luci.sys.exec("sysctl net.nf_conntrack_max") or
			luci.sys.exec("sysctl net.ipv4.netfilter.ip_conntrack_max") or
			""):match("%d+")) or 4096

		local rv = {
			uptime     = luci.sys.uptime(),
			localtime  = os.date(),
			cpu	   = luci.quest.cpuload,
			memtotal   = memtotal,
			memcached  = memcached,
			membuffers = membuffers,
			memfree    = memfree,
			connmax    = conn_max,
			conncount  = conn_count,
			leases     = luci.tools.status.dhcp_leases(),
			wifinets   = luci.tools.status.wifi_networks()
		}

		if wan then
			rv.wan = {
				ipaddr  = wan:ipaddr(),
				gwaddr  = wan:gwaddr(),
				netmask = wan:netmask(),
				dns     = wan:dnsaddrs(),
				expires = wan:expires(),
				uptime  = wan:uptime(),
				proto   = wan:proto(),
				ifname  = wan:ifname(),
				link    = wan:adminlink(),
				Wname   = prt:Wname(wan:ifname()),
				l2name  = prt:l2name(wan:ifname()),
				dsrate  = prt:dslrate("down"),
				usrate  = prt:dslrate("up")
			}
		end

		rv.port = {
			eth0	= prt:status_eth("eth0", "link") or prt:status_eth("eth0", "up"),
			eth1	= prt:status_eth("eth1", "link") or prt:status_eth("eth1", "up"),
			eth2	= prt:status_eth("eth2", "link") or prt:status_eth("eth2", "up"),
			eth3	= prt:status_eth("eth3", "link") or prt:status_eth("eth3", "up"),
			eth4	= prt:status_eth("eth4", "link") or prt:status_eth("eth4", "up"),
			eth5	= prt:status_eth("eth5", "link") or prt:status_eth("eth5", "up"),
			dsl	= prt:status_dsl(),
			usb     = prt:status_usb()
		}


		if wan6 then
			rv.wan6 = {
				ip6addr = wan6:ip6addr(),
				gw6addr = wan6:gw6addr(),
				dns     = wan6:dns6addrs(),
				uptime  = wan6:uptime(),
				ifname  = wan6:ifname(),
				link    = wan6:adminlink()
			}
		end

		luci.http.prepare_content("application/json")
		luci.http.write_json(rv)

		return
	end

	local system, model = luci.sys.sysinfo()
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">//<![CDATA[
	function progressbar(v, m)
	{
		var vn = parseInt(v) || 0;
		var mn = parseInt(m) || 100;
		var pc = Math.floor((100 / mn) * vn);

		return String.format(
			'<div style="width:200px; position:relative; border:1px solid #999999">' +
				'<div style="background-color:#CCCCCC; width:%d%%; height:15px">' +
					'<div style="position:absolute; left:0; top:0; text-align:center; width:100%%; color:#000000">' +
						'<small>%s / %s (%d%%)</small>' +
					'</div>' +
				'</div>' +
			'</div>', pc, v, m, pc
		);
	}

	var iwxhr = new XHR();
	var wifidevs = <%=luci.http.write_json(netdevs)%>;
	var arptable = <%=luci.http.write_json(arpcache)%>;

	var update_status = function() {
		iwxhr.get('<%=REQUEST_URI%>', { status: 1 },
			function(x, info)
			{
				var si = document.getElementById('wan4_i');
				var ss = document.getElementById('wan4_s');
				var ifc = info.wan;
				var iport = info.port;

				<!-- Port Status -->

				var p0 = document.getElementById('port_eth0');
				var p1 = document.getElementById('port_eth1');
				var p2 = document.getElementById('port_eth2');
				var p3 = document.getElementById('port_eth3');
				var p4 = document.getElementById('port_eth4');
				var p5 = document.getElementById('port_eth5');
				var pd = document.getElementById('port_dsl');
				var pu = document.getElementById('port_usb');

				if (iport.eth0 == "up")
					p0.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(0)%>.png"/><br />';
				else if (iport.eth0 == "down")
					p0.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(0)%>_disabled.png"/><br />';

				if (iport.eth1 == "up")
					p1.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(1)%>.png"/><br />';
				else if (iport.eth1 == "down")
					p1.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(1)%>_disabled.png"/><br />';

				if (iport.eth2 == "up")
					p2.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(2)%>.png"/><br />';
				else if (iport.eth2 == "down")
					p2.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(2)%>_disabled.png"/><br />';

				if (iport.eth3 == "up")
					p3.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(3)%>.png"/><br />';
				else if (iport.eth3 == "down")
					p3.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(3)%>_disabled.png"/><br />';

				if (iport.eth4 == "up")
					p4.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(4)%>.png"/><br />';
				else if (iport.eth4 == "down")
					p4.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(4)%>_disabled.png"/><br />';

				if (iport.eth5 == "up")
					p5.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(5)%>.png"/><br />';
				else if (iport.eth5 == "down")
					p5.innerHTML = '<img src="<%=resource%>/icons/ethernet<%=prt:eth_type(5)%>_disabled.png"/><br />';

				if (iport.dsl == "adsl")
					pd.innerHTML = '<img src="<%=resource%>/icons/adsl.png"/><br />';
				else if (iport.dsl == "vdsl")
					pd.innerHTML = '<img src="<%=resource%>/icons/vdsl2.png"/><br />';
				else
					pd.innerHTML = '<img src="<%=resource%>/icons/dsl_disabled.png"/><br />';

				if (iport.usb == 1)
					pu.innerHTML = '<img src="<%=resource%>/icons/usb.png"/><br />';
				else
					pu.innerHTML = '<img src="<%=resource%>/icons/usb_disabled.png"/><br />';

				<!-- ----------- -->

				if (ifc && ifc.ifname && ifc.proto != 'none')
				{
					var s = String.format(
						'<strong><%:Type%>: </strong>%s<br />' +
						'<strong><%:Address%>: </strong>%s<br />' +
						'<strong><%:Netmask%>: </strong>%s<br />' +
						'<strong><%:Gateway%>: </strong>%s<br />',
							ifc.proto,
							(ifc.ipaddr) ? ifc.ipaddr : '0.0.0.0',
							(ifc.netmask != ifc.ipaddr) ? ifc.netmask : '255.255.255.255',
							(ifc.gwaddr) ? ifc.gwaddr : '0.0.0.0'
					);

					for (var i = 0; i < ifc.dns.length; i++)
					{
						s += String.format(
							'<strong><%:DNS%> %d: </strong>%s<br />',
							i + 1, ifc.dns[i]
						);
					}

					if (ifc.expires > -1)
					{
						s += String.format(
							'<strong><%:Expires%>: </strong>%t<br />',
							ifc.expires
						);
					}

					if (ifc.uptime > 0)
					{
						s += String.format(
							'<strong><%:Connected%>: </strong>%t<br />',
							ifc.uptime
						);
					}

					if (ifc.Wname.search("ptm") != "-1")
					{
						s += String.format(
							'<strong><%:Downstream Rate%>: </strong>%s Kbps<br />',
							ifc.dsrate
						);

						s += String.format(
							'<strong><%:Upstream Rate%>: </strong>%s Kbps<br />',
							ifc.usrate
						);

						ss.innerHTML = String.format('<small>%s</small>', s);
						si.innerHTML = String.format(
							'<img src="<%=resource%>/icons/vdsl2.png" />' +
							'<br /><small><a href="%s">%s<br />%s</a></small>',
								ifc.link, ifc.l2name, ifc.ifname
						);
					}
					else if (ifc.Wname.search("atm") != "-1")
					{
						s += String.format(
							'<strong><%:Downstream Rate%>: </strong>%s Kbps<br />',
							ifc.dsrate
						);

						s += String.format(
							'<strong><%:Upstream Rate%>: </strong>%s Kbps<br />',
							ifc.usrate
						);

						ss.innerHTML = String.format('<small>%s</small>', s);
						si.innerHTML = String.format(
							'<img src="<%=resource%>/icons/adsl.png" />' +
							'<br /><small><a href="%s">%s<br />%s</a></small>',
								ifc.link, ifc.l2name, ifc.ifname
						);
					}
					else
					{
						ss.innerHTML = String.format('<small>%s</small>', s);
						si.innerHTML = String.format(
							'<img src="<%=resource%>/icons/ethernetwan.png" />' +
							'<br /><small><a href="%s">%s<br />%s</a></small>',
								ifc.link, ifc.l2name, ifc.ifname
						);
					}
				}
				else
				{
					si.innerHTML = '<img src="<%=resource%>/icons/ethernet_disabled.png" /><br /><small></small>';
					ss.innerHTML = '<em>Not connected</em>';
				}

				<% if has_ipv6 then %>
				var si6 = document.getElementById('wan6_i');
				var ss6 = document.getElementById('wan6_s');
				var ifc6 = info.wan6;

				if (ifc6 && ifc6.ifname && ifc6.proto != 'none')
				{
					var s = String.format(
						'<strong><%:Address%>: </strong>%s<br />' +
						'<strong><%:Gateway%>: </strong>%s<br />',
							(ifc6.ip6addr) ? ifc6.ip6addr : '::',
							(ifc6.gw6addr) ? ifc6.gw6addr : '::'
					);

					for (var i = 0; i < ifc6.dns.length; i++)
					{
						s += String.format(
							'<strong><%:DNS%> %d: </strong>%s<br />',
							i + 1, ifc6.dns[i]
						);
					}

					if (ifc6.uptime > 0)
					{
						s += String.format(
							'<strong><%:Connected%>: </strong>%t<br />',
							ifc6.uptime
						);
					}

					ss6.innerHTML = String.format('<small>%s</small>', s);
					si6.innerHTML = String.format(
						'<img src="<%=resource%>/icons/ethernetwan.png" />' +
						'<br /><small><a href="%s">%s<br />%s</a></small>',
							ifc.link, ifc.l2name, ifc.ifname
					);
				}
				else
				{
					si6.innerHTML = '<img src="<%=resource%>/icons/ethernet_disabled.png" /><br /><small></small>';
					ss6.innerHTML = '<em>Not connected</em>';
				}
				<% end %>

				<% if has_dhcp then %>
				var ls = document.getElementById('lease_status_table');
				if (ls)
				{
					/* clear all rows */
					while( ls.rows.length > 1 )
						ls.rows[0].parentNode.deleteRow(1);

					for( var i = 0; i < info.leases.length; i++ )
					{
						var timestr;

						if (info.leases[i].expires <= 0)
							timestr = '<em><%:expired%></em>';
						else
							timestr = String.format('%t', info.leases[i].expires);

						var tr = ls.rows[0].parentNode.insertRow(-1);
							tr.className = 'cbi-section-table-row cbi-rowstyle-' + ((i % 2) + 1);

						tr.insertCell(-1).innerHTML = info.leases[i].hostname ? info.leases[i].hostname : '?';
						tr.insertCell(-1).innerHTML = info.leases[i].ipaddr;
						tr.insertCell(-1).innerHTML = info.leases[i].macaddr;
						tr.insertCell(-1).innerHTML = timestr;
						if (info.leases[i].status == 1)
							tr.insertCell(-1).innerHTML = '<img src="<%=resource%>/icons/check.png"/>';
						else
							tr.insertCell(-1).innerHTML = '<img src="<%=resource%>/icons/cross.png"/>';
					}

					if( ls.rows.length == 1 )
					{
						var tr = ls.rows[0].parentNode.insertRow(-1);
							tr.className = 'cbi-section-table-row';

						var td = tr.insertCell(-1);
							td.colSpan = 5;
							td.innerHTML = '<em><br /><%:There are no active leases.%></em>';
					}
				}
				<% end %>

				<% if has_wifi then %>
				var assoclist = [ ];

				var ws = document.getElementById('wifi_status_table');
				if (ws)
				{
					var wsbody = ws.rows[0].parentNode;
					while (ws.rows.length > 0)
						wsbody.deleteRow(0);

					for (var didx = 0; didx < info.wifinets.length; didx++)
					{
						var dev = info.wifinets[didx];

						var tr = wsbody.insertRow(-1);
						var td;

						td = tr.insertCell(-1);
						td.width     = "33%";
						td.innerHTML = dev.name;
						td.style.verticalAlign = "top";

						td = tr.insertCell(-1);

						var s = '';

						for (var nidx = 0; nidx < dev.networks.length; nidx++)
						{
							var net = dev.networks[nidx];
							var is_assoc = (net.bssid.search("00:00:00:00:00:00") == "-1" && net.channel);

							var icon;

							if (is_assoc)
								icon = "<%=resource%>/icons/wqr_" + net.ssid + ".png";
							else
								icon = "<%=resource%>/icons/wifi_disabled.png";

							

							s += String.format(
								'<table><tr><td style="text-align:center; width:32px; padding:3px">' +
									'<img src="%s"/>' +
								'</td><td style="text-align:left; padding:3px"><small>' +
									'<strong><%:SSID%>:</strong> <a href="%s">%h</a><br />' +
									'<strong><%:Mode%>:</strong> %s<br />' +
									'<strong><%:Channel%>:</strong> %d (%.2f GHz)<br />' +
									'<strong><%:Bitrate%>:</strong> %s Mb/s<br />',
									icon,
									net.link, net.ssid,
									net.mode,
									net.channel, net.frequency,
									net.bitrate || '?'
							);

							if (is_assoc)
							{
								s += String.format(
									'<strong><%:BSSID%>:</strong> %s<br />' +
									'<strong><%:Encryption%>:</strong> %s',
										net.bssid,
										net.encryption
								);
							}
							else
							{
								s += '<em><%:Wireless is disabled or not associated%></em>';
							}

							s += '</small></td></tr></table>';

							for (var bssid in net.assoclist)
							{
								assoclist.push({
									bssid:  bssid,
									signal: net.assoclist[bssid].signal,
									noise:  net.assoclist[bssid].noise,
									link:   net.link,
									name:   net.name
								});
							}
						}

						if (!s)
							s = '<em><%:No information available%></em>';

						td.innerHTML = s;
					}
				}

				var ac = document.getElementById('wifi_assoc_table');
				if (ac)
				{
					/* clear all rows */
					while( ac.rows.length > 1 )
						ac.rows[0].parentNode.deleteRow(1);

					assoclist.sort(function(a, b) {
						return (a.name == b.name)
							? (a.bssid < b.bssid)
							: (a.name  > b.name )
						;
					});

					for( var i = 0; i < assoclist.length; i++ )
					{
						var tr = ac.rows[0].parentNode.insertRow(-1);
							tr.className = 'cbi-section-table-row cbi-rowstyle-' + (1 + (i % 2));

						var icon;
						var q = (-1 * (assoclist[i].noise - assoclist[i].signal)) / 5;
						if (q < 1)
							icon = "<%=resource%>/icons/signal-0.png";
						else if (q < 2)
							icon = "<%=resource%>/icons/signal-0-25.png";
						else if (q < 3)
							icon = "<%=resource%>/icons/signal-25-50.png";
						else if (q < 4)
							icon = "<%=resource%>/icons/signal-50-75.png";
						else
							icon = "<%=resource%>/icons/signal-75-100.png";

						tr.insertCell(-1).innerHTML = String.format(
							'<img src="%s" title="<%:Signal%>: %d dBm / <%:Noise%>: %d dBm" />',
							icon, assoclist[i].signal, assoclist[i].noise
						);

						tr.insertCell(-1).innerHTML = assoclist[i].bssid;

						tr.insertCell(-1).innerHTML = String.format(
							'<a href="%s">%h</a>',
								assoclist[i].link,
								assoclist[i].name
						);

						tr.insertCell(-1).innerHTML = String.format('%d dBm', assoclist[i].signal);
						tr.insertCell(-1).innerHTML = String.format('%d dBm', assoclist[i].noise);
					}

					if (ac.rows.length == 0)
					{
						var tr = ac.rows[0].parentNode.insertRow(-1);
						    tr.className = 'cbi-section-table-row';

						var td = tr.insertCell(-1);
						    td.colSpan = 5;
						    td.innerHTML = '<br /><em><%:No information available%></em>';
					}
				}
				<% end %>

				var e;

				if (e = document.getElementById('localtime'))
					e.innerHTML = info.localtime;

				if (e = document.getElementById('uptime'))
					e.innerHTML = String.format('%t', info.uptime);

				if (e = document.getElementById('cpu'))
					e.innerHTML =progressbar(
						info.cpu,
						100
					);

				if (e = document.getElementById('memtotal'))
					e.innerHTML = progressbar(
						(info.memfree + info.membuffers + info.memcached) + " kB",
						info.memtotal + " kB"
					);

				if (e = document.getElementById('memfree'))
					e.innerHTML = progressbar(
						info.memfree + " kB", info.memtotal + " kB"
					);

				if (e = document.getElementById('memcache'))
					e.innerHTML = progressbar(
						info.memcached + " kB", info.memtotal + " kB"
					);

				if (e = document.getElementById('membuff'))
					e.innerHTML = progressbar(
						info.membuffers + " kB", info.memtotal + " kB"
					);

				if (e = document.getElementById('conns'))
					e.innerHTML = progressbar(info.conncount, info.connmax);
			}
		)
		window.setTimeout(update_status, 5000);
	};

	update_status();

//]]></script>

<h2><a id="content" name="content"><%:Status%></a></h2>

<% if advanced then %>
	<p align="center"><input type="radio" name="view_type" value="basic" onclick=location.href="<%=REQUEST_URI%>?advanced=0"> <b>Basic View<b/> &nbsp;&nbsp;&nbsp;&nbsp;
	<input type="radio" name="view_type" value="advanced" checked onclick=location.href="<%=REQUEST_URI%>?advanced=1"> <b>Advanced View<b/>
<% else %>
	<p align="center"><input type="radio" name="view_type" value="basic" checked onclick=location.href="<%=REQUEST_URI%>?advanced=0"> <b>Basic View<b/> &nbsp;&nbsp;&nbsp;&nbsp;
	<input type="radio" name="view_type" value="advanced" onclick=location.href="<%=REQUEST_URI%>?advanced=1"> <b>Advanced View<b/>
<% end %>
<br/><br/>

<fieldset class="cbi-section">
	<legend><%:System%></legend>

	<table width="100%" cellspacing="10">
		<tr><td width="33%"><%:Router Name%></td><td><%=luci.sys.hostname() or "?"%></td></tr>
		<% if advanced then %>
			<tr><td width="33%"><%:Router Model%></td><td><%=pcdata(router.model)%></td></tr>
		<% end %>
		<tr><td width="33%"><%:iopsys Version%></td><td><%=pcdata(router.iopversion) %></td></tr>
		<% if advanced then %>
			<tr><td width="33%"><%:Brcm Version%></td><td><%=pcdata(router.brcmversion) %></td></tr>
			<tr><td width="33%"><%:CFE Version%></td><td>
				<%=pcdata(router.cfeversion)%> /
				<%=pcdata(router.socmodel)%> /
				<%=pcdata(router.socrevision)%>
			</td></tr>
			<tr><td width="33%"><%:OpenWrt Version%></td><td>
				<%=pcdata(luci.version.distname)%> <%=pcdata(luci.version.distversion)%> /
				<%=pcdata(luci.version.luciname)%> <%=pcdata(luci.version.luciversion)%>
			</td></tr>
			<tr><td width="33%"><%:Kernel Version%></td><td><%=pcdata(router.kernel)%></td></tr>
		<% end %>
		<tr><td width="33%"><%:Local Time%></td><td id="localtime">-</td></tr>
		<tr><td width="33%"><%:Uptime%></td><td id="uptime">-</td></tr>
		<% if advanced then %>
			<tr><td width="33%"><%:CPU%></td><td id="cpu">-</td></tr>
		<% end %>
	</table>
</fieldset>

<% if advanced then %>
<fieldset class="cbi-section">
	<legend><%:Memory%></legend>

	<table width="100%" cellspacing="10">
		<tr><td width="33%"><%:Total Available%></td><td id="memtotal">-</td></tr>
		<tr><td width="33%"><%:Free%></td><td id="memfree">-</td></tr>
		<tr><td width="33%"><%:Cached%></td><td id="memcache">-</td></tr>
		<tr><td width="33%"><%:Buffered%></td><td id="membuff">-</td></tr>
	</table>
</fieldset>
<% end %>

<!-- Port Status -->
<fieldset class="cbi-section">
	<legend><%:Port Status%></legend>

	<table class="cbi-section-table">
		<tr class="cbi-section-table-titles">

			<%for _prt in luci.util.execi(". /lib/network/config.sh && interfaceorder | tr ' ' '\n'") do%>
			      <th class="cbi-section-table-cell"><%=prt:port_type(_prt)%></th>
			<%end%>
			<th class="cbi-section-table-cell"><%:DSL%></th>
			<th class="cbi-section-table-cell"><%:USB%></th>
		</tr>

		<tr class="cbi-section-table-row cbi-rowstyle-<%=(style and 1 or 2)%>">
			<%for _prt in luci.util.execi(". /lib/network/config.sh && interfaceorder | tr ' ' '\n'") do%>
				<td id="port_<%=_prt%>" class="cbi-value-field"><img src="<%=resource%>/icons/ethernet<%=prt:eth_type(tonumber(_prt:sub(4)))%>_disabled.png"/></td>
			<% end %>

			<td id="port_dsl" class="cbi-value-field"><img src="<%=resource%>/icons/dsl_disabled.png"/></td>
			<td id="port_usb"class="cbi-value-field"><img src="<%=resource%>/icons/usb_disabled.png"/></td>
		</tr>
	</table>
</fieldset>
<!-- ----------- -->

<fieldset class="cbi-section">
	<legend><%:Network%></legend>

	<table width="100%" cellspacing="10">
		<tr><td width="33%" style="vertical-align:top"><%:IPv4 WAN Status%></td><td>
			<table><tr>
				<td id="wan4_i" style="width:16px; text-align:center; padding:3px"><img src="<%=resource%>/icons/ethernet_disabled.png" /><br /><small></small></td>
				<td id="wan4_s" style="vertical-align:middle; padding: 3px"><em><%:Collecting data...%></em></td>
			</tr></table>
		</td></tr>
		<% if has_ipv6 then %>
		<tr><td width="33%" style="vertical-align:top"><%:IPv6 WAN Status%></td><td>
			<table><tr>
				<td id="wan6_i" style="width:16px; text-align:center; padding:3px"><img src="<%=resource%>/icons/ethernet_disabled.png" /><br /><small></small></td>
				<td id="wan6_s" style="vertical-align:middle; padding: 3px"><em><%:Collecting data...%></em></td>
			</tr></table>
		</td></tr>
		<% end %>
		<tr><td width="33%"><%:Active IP Connections%></td><td id="conns">-</td></tr>
	</table>
</fieldset>

<% if has_dhcp then %>
<fieldset class="cbi-section">
	<legend><%:DHCP Clients%></legend>

	<table class="cbi-section-table" id="lease_status_table">
		<tr class="cbi-section-table-titles">
			<th class="cbi-section-table-cell"><%:Hostname%></th>
			<th class="cbi-section-table-cell"><%:IPv4-Address%></th>
			<th class="cbi-section-table-cell"><%:MAC-Address%></th>
			<th class="cbi-section-table-cell"><%:Leasetime remaining%></th>
			<th class="cbi-section-table-cell"><%:Connected%></th>
		</tr>
		<tr class="cbi-section-table-row">
			<td colspan="5"><em><br /><%:Collecting data...%></em></td>
		</tr>
	</table>
</fieldset>
<% end %>

<% if has_wifi then %>
<fieldset class="cbi-section">
	<legend><%:Wireless%></legend>

	<table id="wifi_status_table" width="100%" cellspacing="10">
		<tr><td><em><%:Collecting data...%></em></td></tr>
	</table>
</fieldset>

<fieldset class="cbi-section">
	<legend><%:Wireless Clients%></legend>

	<table class="cbi-section-table" id="wifi_assoc_table">
		<tr class="cbi-section-table-titles">
			<th class="cbi-section-table-cell">&#160;</th>
			<th class="cbi-section-table-cell"><%:BSSID%></th>
			<th class="cbi-section-table-cell"><%:Network%></th>
			<th class="cbi-section-table-cell"><%:Signal%></th>
			<th class="cbi-section-table-cell"><%:Noise%></th>
		</tr>
		<tr class="cbi-section-table-row">
			<td colspan="5"><em><br /><%:Collecting data...%></em></td>
		</tr>
	</table>
</fieldset>
<% end %>

<%-
	require "luci.util"
	require "nixio.fs"

	local plugins = nixio.fs.dir(luci.util.libpath() .. "/view/admin_status/index")
	if plugins then
		local inc
		for inc in plugins do
			if inc:match("%.htm$") then
				include("admin_status/index/" .. inc:gsub("%.htm$", ""))
			end
		end
	end
	
-%>

<%+footer%>
